name: Release Test

on:
  push:
    tags:
      - 'test-v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  test-release:
    name: Test Release Process
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/test-}" >> $GITHUB_OUTPUT
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-test-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run tests
      run: cargo test --all-features
    
    - name: Check code quality
      run: |
        cargo fmt --check
        cargo clippy --all-features -- -D warnings -A clippy::empty-line-after-doc-comments -A clippy::mixed-attributes-style
    
    - name: Build release packages
      run: cargo build --release --all-features
    
    - name: Verify packages can be published (dry run)
      run: |
        cd hsipc-macros
        cargo publish --dry-run
        cd ..
        echo "Skipping hsipc dry-run (depends on hsipc-macros not yet on crates.io)"
    
    - name: Create Test Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: test-${{ steps.get_version.outputs.VERSION }}
        name: Test Release ${{ steps.get_version.outputs.VERSION }}
        draft: true
        prerelease: true
        body: |
          ðŸ§ª **This is a test release** 
          
          Testing the automated release process for hsipc ${{ steps.get_version.outputs.VERSION }}
          
          ## Test Results
          
          - âœ… All tests passed
          - âœ… Code quality checks passed
          - âœ… Build successful
          - âœ… Packages can be published (dry run)
          
          ## What was tested
          
          - Automated version detection
          - Build and test process
          - Package validation
          - GitHub Release creation
          
          *This release will not be published to crates.io*